@page "/SupportRequestDashboard"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@using DomainModels

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<PageTitle>SupportRequestDashboard</PageTitle>

<!-- Support Request Dashboard Container -->
<div class="container">
	@if (allSupportRequests != null && allSupportRequests.Count >0)
	{
		<!-- Support Request Table -->
		<table class="table">
			<thead>
				<tr>
					<th>Status</th>
					<th>Id</th>
					<th>Created Date</th>
					<th>Name</th>
					<th>Email</th>
					<th>Subject</th>
					<th>Message</th>
					<th>Actions</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var supportRequest in allSupportRequests)
				{
					<tr class="@GetRowClass(supportRequest)">
						<td>
							<i class="bi bi-circle-fill @GetRowClass(supportRequest)"></i>
						</td>
						<td>@supportRequest.Id</td>
						<td>@supportRequest.CreatedAt.ToString("dd/MM/yyyy")</td>
						<td>@supportRequest.Name</td>
						<td>@supportRequest.Email</td>
						<td>@supportRequest.Subject</td>
						<td>@supportRequest.Message</td>
						<td>
							<button class="btn btn-danger delete-request-btn" @onclick="() => DeleteSupportRequestFromId(supportRequest.Id)">
								<i class="bi bi-trash delete-request-btn" style="color:white;"></i> Delete request
							</button>
							<button class="btn-goto-request" @onclick="@(() => navManager.NavigateTo($"/HandleSupportRequest/{supportRequest.Id}"))">
								<i class="bi bi-clipboard-check-fill"></i> Request
							</button>
						</td>
					</tr>
				}
			</tbody>
		</table>
	}
	else if (allSupportRequests == null)
	{
		<!-- Loading Animation -->
		<center>
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" height="128px" width="128px" class="pl">
				<circle stroke-dashoffset="-376.4" stroke-dasharray="377 377" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="8" stroke="hsl(3,90%,55%)" fill="none" r="60" cy="64" cx="64" class="pl__ring1"></circle>
				<circle stroke-dashoffset="-329.3" stroke-dasharray="329.9 329.9" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="7" stroke="hsl(13,90%,55%)" fill="none" r="52.5" cy="64" cx="64" class="pl__ring2"></circle>
				<circle stroke-dashoffset="-288.6" stroke-dasharray="289 289" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="6" stroke="hsl(23,90%,55%)" fill="none" r="46" cy="64" cx="64" class="pl__ring3"></circle>
				<circle stroke-dashoffset="-254" stroke-dasharray="254.5 254.5" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="5" stroke="hsl(33,90%,55%)" fill="none" r="40.5" cy="64" cx="64" class="pl__ring4"></circle>
				<circle stroke-dashoffset="-225.8" stroke-dasharray="226.2 226.2" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="4" stroke="hsl(43,90%,55%)" fill="none" r="36" cy="64" cx="64" class="pl__ring5"></circle>
				<circle stroke-dashoffset="-203.9" stroke-dasharray="204.2 204.2" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="3" stroke="hsl(53,90%,55%)" fill="none" r="32.5" cy="64" cx="64" class="pl__ring6"></circle>
			</svg>
		</center>
	}
	else
	{
		<p>No bookings found</p>
	}
</div>

@code {
	private List<SupportRequest> allSupportRequests = new List<SupportRequest>();

	protected override async Task OnInitializedAsync()
	{
		if (!AppState.LoggedIn || !AppState.IsAdmin)
		{
			navManager.NavigateTo("/");
		}

		allSupportRequests = await dbService.GetAllSupportRequests();
		allSupportRequests = allSupportRequests.OrderByDescending(x => x.Status).ToList();
	}

	private async Task DeleteSupportRequestFromId(int id)
	{
		await dbService.DeleteSupportRequest(id);

		var requestToDelete = allSupportRequests.First(b => b.Id == id);
		if (requestToDelete != null)
		{
			allSupportRequests.Remove(requestToDelete);
		}
		StateHasChanged();
	}

	private string GetRowClass(SupportRequest supportRequest)
	{
		if (supportRequest.Status == "Pending")
		{
			return "pending-request";
		}
		else
		{
			return "done-request";
		}
	}
}