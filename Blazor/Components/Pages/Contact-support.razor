@page "/contact-support"
@using DomainModels
@inject Blazor.Services.DatabaseService dbService
@inject NavigationManager navManager
@using Microsoft.JSInterop
@inject IJSRuntime jsRuntime


<h3>Contact Support</h3>

<EditForm Model="@supportRequest" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="supportRequest.Name" class="form-control" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="supportRequest.Email" class="form-control" />
    </div>

    <div class="form-group">
        <label for="subject">Subject:</label>
        <InputText id="subject" @bind-Value="supportRequest.Subject" class="form-control" />
    </div>

    <div class="form-group">
        <label for="message">Message:</label>
        <InputTextArea id="message" @bind-Value="supportRequest.Message" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    private SupportRequest supportRequest = new SupportRequest();
    private string errorMessage = string.Empty;

    private void HandleValidSubmit()
    {
        try
        {
            dbService.AddSupportRequest(supportRequest);
            // Eventuelt feedback til brugeren om, at deres anmodning blev sendt.
            supportRequest = new SupportRequest(); // Reset formularen
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
