@page "/contact-support"
@using DomainModels
@inject HttpClient Http
@inject NavigationManager navManager
@using Microsoft.JSInterop
@inject IJSRuntime jsRuntime


<h3>Contact Support</h3>

<EditForm Model="@supportRequest" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="supportRequest.Name" class="form-control" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="supportRequest.Email" class="form-control" />
    </div>

    <div class="form-group">
        <label for="subject">Subject:</label>
        <InputText id="subject" @bind-Value="supportRequest.Subject" class="form-control" />
    </div>

    <div class="form-group">
        <label for="message">Message:</label>
        <InputTextArea id="message" @bind-Value="supportRequest.Message" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success mt-3">@successMessage</div>
}

@code {
    private SupportRequest supportRequest = new SupportRequest();
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/SupportRequest", supportRequest);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Your support request has been submitted successfully.";
                supportRequest = new SupportRequest(); // Reset the form
                errorMessage = string.Empty; // Clear any previous error messages
            }
            else
            {
                errorMessage = $"Failed to submit support request. Status code: {response.StatusCode}";
                successMessage = string.Empty; // Clear any previous success messages
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
            successMessage = string.Empty; // Clear any previous success messages
        }
    }
}
