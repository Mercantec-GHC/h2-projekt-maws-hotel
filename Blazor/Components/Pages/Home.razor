@page "/"
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@using DomainModels
@inject AppState AppState
@inject HttpClient Http

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">


<PageTitle>Welcome to Sunset Resort</PageTitle>
<div class="home-background">
    <img src="/Maws-hoteller-photos/background-pic.png" alt="Alternate Text" />
    <h1 class="home-title">Sunset Resort</h1>
    <p class="home-subtitle">Welcome to the Sunset Resort!</p>
</div>

<div class="container">
    <div class="jumbotron text-center mt-4">
    </div>
    <div class="row">
        <div class="col-md-12">
        </div>
    </div>
    <br>
    <div class="row d-flex justify-content-center">
        <div class="jumbotron col-md-3 text-center category">
            <i class="bi bi-star-fill"></i>
            <h3>Luxurious Rooms</h3>
            <p>Our rooms are designed to provide you with ultimate comfort and relaxation.</p>
        </div>
        <div class="jumbotron col-md-3 text-center category">
            <i class="bi bi-cup-hot-fill"></i>
            <h3>Fine Dining</h3>
            <p>Enjoy gourmet cuisine prepared by our world-class chefs.</p>
        </div>
        <div class="jumbotron col-md-3 text-center category">
            <div class="category-icon"><i class="bi bi-binoculars"></i></div>
            <h3>Scenic Views</h3>
            <p>Experience breathtaking views of the ocean and the surrounding nature.</p>
        </div>
    </div>


    <div class="container">
        <h1 class="text-center mt-4 card-section-title">Available Rooms</h1>
        <hr class="hr"/>
        <div class="d-flex justify-content-around">
            <div class="card">
                <img class="card-img-top" src="./Maws-hoteller-photos/Standard01.jpg" alt="Standard Room" />
                <div class="card-body">
                    <h5 class="card-title">Standard Room</h5>
                    <p class="card-text">This is a long description</p>
                    <!-- Vis prisen for standardværelset -->
                    <div class="price-book-container">
                        <p class="card-text price">@allRooms.FirstOrDefault(r => r.Type == 1)?.Price.ToString("C")</p>
                        <button class="card-btn" @onclick="() => FindAndNavigateToRoom(1)">
                            <i class="bi bi-cart-plus"></i> <p class="text">Book now</p>
                        </button>
                    </div>
                </div>
            </div>
            <div class="card">
                <img class="card-img-top" src="./Maws-hoteller-photos/Komfort01.jpg" alt="Komfort Room" />
                <div class="card-body">
                    <h5 class="card-title">Komfort Room</h5>
                    <p class="card-text">This is a long description</p>
                    <!-- Vis prisen for komfortværelset -->
                    <div class="price-book-container">
                        <p class="card-text price">@allRooms.FirstOrDefault(r => r.Type == 2)?.Price.ToString("C")</p>
                        <button class="card-btn" @onclick="() => FindAndNavigateToRoom(2)">
                            <i class="bi bi-cart-plus"></i> <p class="text">Book now</p>
                        </button>
                    </div>
                </div>
            </div>
            <div class="card">
                <img class="card-img-top" src="./Maws-hoteller-photos/Suite01.jpg" alt="Suite Room" />
                <div class="card-body">
                    <h5 class="card-title">Suite Room</h5>
                    <p class="card-text">This is a long description</p>
                    <!-- Vis prisen for suiteværelset -->
                    <div class="price-book-container">
                        <p class="card-text price">@allRooms.FirstOrDefault(r => r.Type == 3)?.Price.ToString("C")</p>
                        <button class="card-btn" @onclick="() => FindAndNavigateToRoom(3)">
                            <i class="bi bi-cart-plus"></i> <p class="text">Book now</p>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <br/>
    </div>
</div>





@code {
    public string current;
    public bool ascending = true;

    public List<Room> allRooms = new List<Room>();
    public List<Booking> allBookings = new List<Booking>();

    public int booked_count = 0;
    public int total_rooms = 0;

    protected override async Task OnInitializedAsync()
    {
        allRooms = await dbService.GetRooms();
        allBookings = await dbService.GetBookingsForToday();
        total_rooms = allRooms.Count;
    }

    public async Task FindAndNavigateToRoom(int roomType)
    {
        // Find a free room of the given type
        var freeRoom = allRooms.FirstOrDefault(r => r.Type == roomType && !r.CurrentlyBooked);

        if (freeRoom != null)
        {
            // Navigate to room details if a free room is found
            navManager.NavigateTo($"/room-details/{freeRoom.Id}");
        }
        else
        {
            // Optionally, show a message or alert if no rooms are available
            await JSRuntime.InvokeVoidAsync("alert", "No available rooms of this type at the moment.");
        }
    }

    public void gotoBooking(int id)
    {
        
        if (!AppState.LoggedIn)
        {
            navManager.NavigateTo("/login");
        }
        else
        {
            navManager.NavigateTo($"/room-details/{id}");
        }
    }
    private void SetSortColumn(string colunm)
    {
        if (current == colunm)
        {
            ascending = !ascending;
        }
        else
        {
            current = colunm;
            ascending = true;
        }

        SortRooms(current);
    }

    private void SortRooms(string colunm)
    {
        switch (colunm)
        {
            case "Id":
            allRooms = ascending ? allRooms.OrderBy(r => r.Id).ToList() : allRooms.OrderByDescending(r => r.Id).ToList();
            break;
            case "Price":
            allRooms = ascending ? allRooms.OrderBy(r => r.Price).ToList() : allRooms.OrderByDescending(r => r.Price).ToList();
            break;
            case "Type":
            allRooms = ascending ? allRooms.OrderBy(r => r.Type).ToList() : allRooms.OrderByDescending(r => r.Type).ToList();
            break;
            case "CurrentlyBooked":
            allRooms = ascending ? allRooms.OrderBy(r => r.CurrentlyBooked).ToList() : allRooms.OrderByDescending(r => r.CurrentlyBooked).ToList();
            break;
        }
    }

    private string GetRoomType(int roomType)
    {
        return roomType switch
        {
            1 => "Standard",
            2 => "Komfort",
            3 => "Suite"
        };
    }
}