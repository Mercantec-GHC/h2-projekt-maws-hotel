@page "/ProfileDashboard"
@using DomainModels
@inject AppState AppState
@inject HttpClient HttpClient
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject Blazor.Services.DatabaseService db

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">


<div class="container">
    <div class="page-content">
        <div class="padding">
            <div class="row justify-content-center">
                <div class="col-md-8 col-lg-10">
                    <div class="card user-card-full shadow-lg rounded">
                        <div class="row m-l-0 m-r-0">
                            <div class="col-sm-4 bg-c-lite-green user-profile position-relative">
                                <button class="edit-profile-btn position-absolute" @onclick="EditProfile"><i class="bi bi-pencil-square"></i></button>
                                <div class="card-block text-center text-white">
                                    <div class="m-b-25">
                                        <img src="https://img.icons8.com/bubbles/100/000000/user.png" class="img-radius" alt="User-Profile-Image">
                                    </div>

                                    @if (profile != null)
                                    {
                                    <h6 class="show-name">@profile.Name</h6>
                                        @if (AppState.IsAdmin)
                                        {
                                            <h6 class="show-role"><i class="bi bi-award"></i>Administrator</h6>

                                        } else
                                        {
                                            <h6 class="show-role"><i class="bi bi-award"></i>User</h6>

                                        }
                                        <p></p>
                                        <p class="show-phonenumber"><i class="bi bi-telephone"></i>@profile.PhoneNumber</p>
                                        
                                        <i class="mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16"></i>
                                        
                                    }
                                    else
                                    {
                                        <center>
                                            <svg class="pl" width="128px" height="128px" viewBox="0 0 128 128" xmlns="http://www.w3.org/2000/svg">
                                                <circle class="pl__ring1" cx="64" cy="64" r="60" fill="none" stroke="hsl(3,90%,55%)" stroke-width="8" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="377 377" stroke-dashoffset="-376.4"></circle>
                                                <circle class="pl__ring2" cx="64" cy="64" r="52.5" fill="none" stroke="hsl(13,90%,55%)" stroke-width="7" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="329.9 329.9" stroke-dashoffset="-329.3"></circle>
                                                <circle class="pl__ring3" cx="64" cy="64" r="46" fill="none" stroke="hsl(23,90%,55%)" stroke-width="6" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="289 289" stroke-dashoffset="-288.6"></circle>
                                                <circle class="pl__ring4" cx="64" cy="64" r="40.5" fill="none" stroke="hsl(33,90%,55%)" stroke-width="5" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="254.5 254.5" stroke-dashoffset="-254"></circle>
                                                <circle class="pl__ring5" cx="64" cy="64" r="36" fill="none" stroke="hsl(43,90%,55%)" stroke-width="4" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="226.2 226.2" stroke-dashoffset="-225.8"></circle>
                                                <circle class="pl__ring6" cx="64" cy="64" r="32.5" fill="none" stroke="hsl(53,90%,55%)" stroke-width="3" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="204.2 204.2" stroke-dashoffset="-203.9"></circle>
                                            </svg>
                                        </center>
                                    }
                                </div>
                            </div>

                            <div class="col-sm-8">
                                <div class="card-block">
                                    @if (profile != null)
                                    {
                                        <center><h6 class="m-b-20 p-b-5 b-b-default f-w-800 title" style="#282c30">Information</h6></center>
                                        
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <p class="m-b-10 f-w-600">Email</p>
                                                <h6 class="text-muted f-w-400">@profile.Email</h6>
                                            </div>
                                            <div class="col-sm-6">
                                                <p class="m-b-10 f-w-600">Address</p>
                                                <h6 class="text-muted f-w-400">@profile.Address</h6>
                                            </div>
                                        </div>
                                        

                                        
                                    }
                                    else
                                    {
                                        <center>
                                            <svg class="pl" width="128px" height="128px" viewBox="0 0 128 128" xmlns="http://www.w3.org/2000/svg">
                                                <circle class="pl__ring1" cx="64" cy="64" r="60" fill="none" stroke="hsl(3,90%,55%)" stroke-width="8" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="377 377" stroke-dashoffset="-376.4"></circle>
                                                <circle class="pl__ring2" cx="64" cy="64" r="52.5" fill="none" stroke="hsl(13,90%,55%)" stroke-width="7" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="329.9 329.9" stroke-dashoffset="-329.3"></circle>
                                                <circle class="pl__ring3" cx="64" cy="64" r="46" fill="none" stroke="hsl(23,90%,55%)" stroke-width="6" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="289 289" stroke-dashoffset="-288.6"></circle>
                                                <circle class="pl__ring4" cx="64" cy="64" r="40.5" fill="none" stroke="hsl(33,90%,55%)" stroke-width="5" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="254.5 254.5" stroke-dashoffset="-254"></circle>
                                                <circle class="pl__ring5" cx="64" cy="64" r="36" fill="none" stroke="hsl(43,90%,55%)" stroke-width="4" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="226.2 226.2" stroke-dashoffset="-225.8"></circle>
                                                <circle class="pl__ring6" cx="64" cy="64" r="32.5" fill="none" stroke="hsl(53,90%,55%)" stroke-width="3" transform="rotate(-90,64,64)" stroke-linecap="round" stroke-dasharray="204.2 204.2" stroke-dashoffset="-203.9"></circle>
                                            </svg>
                                        </center>
                                    }

                                    <h6 class="m-b-20 m-t-40 p-b-5 b-b-default f-w-600 title">Upcoming Bookings</h6>
                                    @if (upcomingBookings != null && upcomingBookings.Any())
                                    {
                                        <div class="table-container">
                                            <table class="table">
                                                <thead>
                                                    <tr>
                                                        <th>Booking ID</th>
                                                        <th>Room</th>
                                                        <th>Start Date</th>
                                                        <th>End Date</th>
                                                        <th>Total price</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var booking in upcomingBookings)
                                                    {
                                                        <tr>
                                                            <td>@booking.Id</td>
                                                            <td>@booking.RoomId</td>
                                                            <td>@booking.DateStart.ToString("dd/MM/yyyy")</td>
                                                            <td>@booking.DateEnd.ToString("dd/MM/yyyy")</td>
                                                            <td>@CalculateTotalPrice(booking)</td>
                                                            <td>
                                                                <button class="btn-goto-booking" @onclick="@(() => GotoBooking(booking.RoomId))">
                                                                Show
                                                                </button>
                                                            </td>

                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    }
                                    else
                                    {
                                        <p>No upcoming bookings found.</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Profile? profile;
    public List<DomainModels.Booking> upcomingBookings = new List<DomainModels.Booking>();
    public List<DomainModels.Room> allRooms = new List<DomainModels.Room>();


    protected override async Task OnInitializedAsync()
    {
        if (AppState.LoggedIn)
        {
            profile = await HttpClient.GetFromJsonAsync<Profile>($"api/profile/{AppState.UserId}");
            upcomingBookings = await db.GetBookingsFromUserID(AppState.UserId);
            allRooms = await db.GetRooms();

        }
    }

    private decimal CalculateTotalPrice(Booking booking)
    {
        var room = allRooms.FirstOrDefault(r => r.Id == booking.RoomId);
        if (room == null)
        {
            return 0;
        }

        var days = (booking.DateEnd - booking.DateStart).Days;
        if (days == 0) days = 1;

        return days * (decimal)room.Price;
    }


    private void EditProfile()
    {
        NavigationManager.NavigateTo($"/EditProfile/{profile?.Id}");
    }

    private void GotoBooking(int bookingId)
    {
        NavigationManager.NavigateTo($"/room-details/{bookingId}");
    }

}
