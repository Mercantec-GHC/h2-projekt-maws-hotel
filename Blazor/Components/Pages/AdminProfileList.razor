@page "/admin-profile-list"
@using DomainModels

@inject ILogger<AdminProfileList> Logger

<div class="container">
    <center><h3 class="title">Admin Profile List</h3></center>

    @if (!AppState.LoggedIn || !AppState.IsAdmin)
    {
        <p>You do not have permission to access this page.</p>
    }
    else if (profiles == null)
    {
        <center>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" height="128px" width="128px" class="pl">
                <circle stroke-dashoffset="-376.4" stroke-dasharray="377 377" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="8" stroke="hsl(3,90%,55%)" fill="none" r="60" cy="64" cx="64" class="pl__ring1"></circle>
                <circle stroke-dashoffset="-329.3" stroke-dasharray="329.9 329.9" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="7" stroke="hsl(13,90%,55%)" fill="none" r="52.5" cy="64" cx="64" class="pl__ring2"></circle>
                <circle stroke-dashoffset="-288.6" stroke-dasharray="289 289" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="6" stroke="hsl(23,90%,55%)" fill="none" r="46" cy="64" cx="64" class="pl__ring3"></circle>
                <circle stroke-dashoffset="-254" stroke-dasharray="254.5 254.5" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="5" stroke="hsl(33,90%,55%)" fill="none" r="40.5" cy="64" cx="64" class="pl__ring4"></circle>
                <circle stroke-dashoffset="-225.8" stroke-dasharray="226.2 226.2" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="4" stroke="hsl(43,90%,55%)" fill="none" r="36" cy="64" cx="64" class="pl__ring5"></circle>
                <circle stroke-dashoffset="-203.9" stroke-dasharray="204.2 204.2" stroke-linecap="round" transform="rotate(-90,64,64)" stroke-width="3" stroke="hsl(53,90%,55%)" fill="none" r="32.5" cy="64" cx="64" class="pl__ring6"></circle>
            </svg>
        </center>
    }
    else
    {
        <div class="form-group">
            <input type="text" class="form-control" placeholder="Search profiles..." @bind="searchTerm" @bind:event="oninput" @onkeyup="FilterProfiles" />
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var profile in filteredProfiles)
                {
                    <tr>
                        <td>@profile.Id</td>
                        <td>@profile.Name</td>
                        <td>@profile.Email</td>
                        <td>
                            <a href="@($"/admin-edit-profile/{profile.Id}")" class="edit-profile-btn">Edit</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<Profile> profiles;
    private List<Profile> filteredProfiles;
    private string searchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (!AppState.LoggedIn || !AppState.IsAdmin)
            {
                navManager.NavigateTo("/");
                return;
            }

            profiles = await Http.GetFromJsonAsync<List<Profile>>("api/profile/all");
            filteredProfiles = profiles;
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error in AdminProfileList OnInitializedAsync");
        }
    }

    private void FilterProfiles()
    {
        filteredProfiles = profiles.Where(p =>
            p.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
            p.Email.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
            p.Id.ToString().Contains(searchTerm)).ToList();
    }
}
