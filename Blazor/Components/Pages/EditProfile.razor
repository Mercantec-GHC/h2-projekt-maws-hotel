@page "/EditProfile/{id:int}"
@using DomainModels



<PageTitle>Edit Profile</PageTitle>

<HeadContent>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
</HeadContent>

<div class="container">
    @if (profile != null)
    {
        <div class="admin-edit-profile">
            <div class="profile-header">
                <div class="profile-icon">
                    <i class="bi bi-person-circle"></i>
                </div>
                <h3>Edit Profile</h3>
            </div>
            <div class="card-block">
                <EditForm Model="@profile" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="name">Name:</label>
                        <InputText id="name" @bind-Value="profile.Name" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label for="email">Email:</label>
                        <InputText id="email" @bind-Value="profile.Email" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label for="birthday">Birthday:</label>
                        <InputDate id="birthday" @bind-Value="profile.Birthday" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label for="address">Address:</label>
                        <InputText id="address" @bind-Value="profile.Address" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label for="phone">Phone Number:</label>
                        <InputText id="phone" @bind-Value="profile.PhoneNumber" class="form-control" />
                    </div>

                    @if (AppState.IsAdmin)
                    {
                        <div class="form-group form-check">
                            <label class="form-check-label">
                                <InputCheckbox @bind-Value="profile.Administrator" class="form-check-input" />
                                <span class="checkmark"></span>
                                Administrator
                            </label>
                        </div>
                    }

                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                        <button type="button" @onclick="Cancel" class="btn btn-secondary">Cancel</button>
                    </div>
                </EditForm>
            </div>
        </div>
    }
    else
    {
        <p class="loading">Loading...</p>
    }
</div>
@code {
    [Parameter]
    public int id { get; set; }

    private Profile? profile;

    protected override async Task OnInitializedAsync()
    {
        profile = await Http.GetFromJsonAsync<Profile>($"api/profile/{id}");
        if (profile == null || AppState.UserId != id)
        {
            navManager.NavigateTo("/");

        }
    }

    private async Task HandleValidSubmit()
    {
        if (profile.Birthday.HasValue)
        {
            profile.Birthday = profile.Birthday.Value.ToUniversalTime();
        }

        var response = await Http.PutAsJsonAsync($"api/profile/{id}", profile);

        if (response.IsSuccessStatusCode)
        {
            navManager.NavigateTo("/ProfileDashboard");
        }
        else
        {
            // Handle error
            Console.WriteLine("Error updating profile");
        }
    }

    private async Task DeleteProfile()
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Er du sikker på, at du vil slette din profil?"))
        {
            var response = await Http.DeleteAsync($"api/profile/deactivate/{AppState.UserId}");

            if (response.IsSuccessStatusCode)
            {
                AppState.Logout();
                navManager.NavigateTo("/");
            }
            else
            {
                Console.WriteLine("Fejl ved sletning af profil");
            }
        }
    }

    private void Cancel()
    {
        navManager.NavigateTo("/ProfileDashboard");
    }
}
