@page "/BookSuccess"
@using DomainModels
@inject Blazor.Services.DatabaseService db
@inject IJSRuntime JSRuntime

<div class="container" id="animationContainer">
    <div class="left-side">
        <div class="card">
            <div class="card-line"></div>
            <div class="buttons"></div>
        </div>
        <div class="post">
            <div class="post-line"></div>
            <div class="screen">
                <div class="dollar">$</div>
            </div>
            <div class="numbers"></div>
            <div class="numbers-line2"></div>
        </div>
    </div>
    <div class="right-side">
        <div class="new">Checkout</div>
    </div>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        // Wait for the component to be fully initialized, then start the animation
        await Task.Delay(1000); // Delay for 1 second
        await InvokeJS("initAnimation()");
    }

    private async Task InvokeJS(string jsCode)
    {
        await JSRuntime.InvokeVoidAsync("eval", jsCode);
    }
}

@* Inline JavaScript to handle animation *@
<script>
    function initAnimation() {
        document.querySelector('#animationContainer').classList.add('animate');
        }
</script>
